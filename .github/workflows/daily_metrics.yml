name: Daily X Metrics Tracking

on:
  schedule:
    # Run once daily at 12:00 UTC (respecting 1 request/24 hours limit)
    - cron: '0 12 * * *'
  
  # Allow manual triggering for testing (use sparingly due to rate limits)
  workflow_dispatch:

jobs:
  track-metrics:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python with uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Install dependencies
      run: uv sync
    
    - name: Run metrics tracking
      env:
        BEARER_TOKEN: ${{ secrets.BEARER_TOKEN }}
        API_KEY: ${{ secrets.API_KEY }}
        API_KEY_SECRET: ${{ secrets.API_KEY_SECRET }}
        TARGET_USER_ID: ${{ secrets.TARGET_USER_ID }}
        TARGET_USERNAME: ${{ secrets.TARGET_USERNAME }}
      run: |
        echo "Starting daily metrics tracking..."
        echo "Target: @$TARGET_USERNAME (ID: $TARGET_USER_ID)"
        echo "Timestamp: $(date -u +%Y-%m-%dT%H:%M:%SZ)"
        
        # Run the metrics tracker
        uv run track_metrics.py
        
        # Check if new data was generated
        if [ -f "metrics_history.csv" ] && [ -f "latest_metrics.json" ]; then
          echo "‚úÖ Metrics tracking completed successfully"
        else
          echo "‚ùå Metrics tracking may have failed - check output above"
          exit 1
        fi
    
    - name: Generate summary report
      run: |
        echo "## Daily Metrics Report - $(date -u +%Y-%m-%d)" > daily_report.md
        echo "" >> daily_report.md
        
        if [ -f "latest_metrics.json" ]; then
          echo "### Current Metrics" >> daily_report.md
          echo "\`\`\`json" >> daily_report.md
          cat latest_metrics.json >> daily_report.md
          echo "\`\`\`" >> daily_report.md
          echo "" >> daily_report.md
        fi
        
        echo "### Historical Data" >> daily_report.md
        if [ -f "metrics_history.csv" ]; then
          echo "CSV file contains $(wc -l < metrics_history.csv) total measurements." >> daily_report.md
        else
          echo "No historical data yet." >> daily_report.md
        fi
        
        echo "" >> daily_report.md
        echo "Generated by GitHub Actions on $(date -u)" >> daily_report.md
    
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add all generated files
        git add metrics_history.csv latest_metrics.json daily_report.md
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          # Create commit message with metrics summary
          if [ -f "latest_metrics.json" ]; then
            FOLLOWERS=$(jq -r '.followers_count' latest_metrics.json 2>/dev/null || echo "unknown")
            FOLLOWING=$(jq -r '.following_count' latest_metrics.json 2>/dev/null || echo "unknown")
            TWEETS=$(jq -r '.tweet_count' latest_metrics.json 2>/dev/null || echo "unknown")
            
            git commit -m "Daily metrics update: ${FOLLOWERS} followers, ${FOLLOWING} following, ${TWEETS} tweets

ü§ñ Generated with [Claude Code](https://claude.ai/code)

Co-Authored-By: Claude <noreply@anthropic.com>"
          else
            git commit -m "Daily metrics update - $(date -u +%Y-%m-%d)

ü§ñ Generated with [Claude Code](https://claude.ai/code)

Co-Authored-By: Claude <noreply@anthropic.com>"
          fi
          
          git push
          echo "‚úÖ Changes committed and pushed successfully"
        fi
    
    - name: Handle API rate limit errors
      if: failure()
      run: |
        echo "‚ö†Ô∏è  Workflow failed - likely due to API rate limits"
        echo "Free tier X API allows only 1 request per 24 hours"
        echo "Next attempt will be tomorrow at the same time"
        echo "Consider upgrading to a higher tier for more frequent tracking"